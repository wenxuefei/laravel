<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Builder;
use Laravel\Scout\Searchable;

class Article extends Model
{

    protected $guarded = [];

    use Searchable;

    public function searchableAs()
    {
        return 'article';
    }

    public function toSearchableArray()
    {
        return [
            'title' => $this->title,
            'content' => $this->content
        ];
    }

    public function user()
    {
        return $this->belongsTo('App\Models\User', 'user_id', 'id');
    }

    public function comment()
    {
        return $this->hasMany('App\Models\Comment')->orderBy('created_at', 'desc');
    }

    public function zan($user_id)
    {
        return $this->hasOne('App\Models\Zan')->where('user_id', $user_id);
    }

    public function zans()
    {
        return $this->hasMany('App\Models\Zan');
    }

    // 属于某个作者的文章
    public function scopeAuthorBy(Builder $query, $user_id)
    {
        return $query->where('user_id', $user_id);
    }

    public function articleTopics()
    {
        return $this->hasMany(\App\Models\ArticleTopic::class, 'article_id');
    }

    // 不属于某个专题的文章
    public function scopeTopicNotBy(Builder $query, $topic_id)
    {
        return $query->doesntHave('articleTopics', 'and', function ($q) use ($topic_id) {
            $q->where("topic_id", $topic_id);
        });
    }

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::addGlobalScope("avaible",function (Builder $builder){
           $builder->whereIn("status",[0,1]);
        });
    }
}
